apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    androidExtensions {
        experimental = true
    }

    defaultConfig {
        applicationId "com.devsparkle.githubexplorer"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    //=== recycler view
    implementation "androidx.recyclerview:recyclerview:1.1.0-beta04"


    //=== dependendy injections
    /*api 'com.google.dagger:dagger:2.24'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.24'

    api 'com.google.dagger:dagger-android:2.24'
    api 'com.google.dagger:dagger-android-support:2.24' // if you use the support libraries
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.24'
*/
    implementation 'com.google.dagger:dagger:2.24'
    kapt 'com.google.dagger:dagger-compiler:2.24'
    implementation 'com.google.dagger:dagger-android:2.24'
    kapt 'com.google.dagger:dagger-android-processor:2.24'
    implementation 'com.google.dagger:dagger-android-support:2.24'



    //=== network

    //okhttp
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp_version"
    testImplementation("com.squareup.okhttp3:mockwebserver:$rootProject.okhttp_version")
    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$rootProject.retrofit_version"
    // monitor the request and the app in chrome://inspect
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    //=== test
    testImplementation "io.mockk:mockk:1.9.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    implementation "com.google.code.gson:gson:$rootProject.gson_version"


    def lifecycle_version = "2.1.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Optional : Kotlin extension (https://d.android.com/kotlin/ktx)
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // image downloading and displaying library
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'

    /**
     * RxJava Make the application reactive
     */
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'


}
